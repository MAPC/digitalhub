// High DPI display backgrounds
@mixin background-2x($path, $ext: "png", $w: auto, $h: auto, $pos: left top, $repeat: no-repeat) {

  $at1x_path: "#{$path}.#{$ext}";
  $at2x_path: "#{$path}@2x.#{$ext}";

  background-image: image-url("#{$at1x_path}");
  background-size: $w $h;
  background-position: $pos;
  background-repeat: $repeat;

  @media all and (-webkit-min-device-pixel-ratio : 1.5),
  all and (-o-min-device-pixel-ratio: 3/2),
  all and (min--moz-device-pixel-ratio: 1.5),
  all and (min-device-pixel-ratio: 1.5) {
    background-image: image-url("#{$at2x_path}");
  }
}

// Media query
@mixin media($size) {
  @if $size == 'x-small' {
    @media (max-width: #{$break_xsmall}) { @content; }
  } @else if $size == 'small' {
    @media (max-width: #{$break_small}) { @content; }
  } @else if $size == 'medium' {
    @media (max-width: #{$break_medium}) { @content; }
  } @else if $size == 'large' {
    @media (max-width: #{$break_large}) { @content; }
  } @else if $size == 'x-large' {
    @media (max-width: #{$break_xlarge}) { @content; }
  } @else {
    @media (max-width: $size) { @content; }
  }
}

// Generate a CSS triangle
@mixin triangle($size, $orientation: 'down', $color: $color_green-dark) {
    $off_size: $size / 2;

    width: 0;
    height: 0;

    @if $orientation == 'down' {
        border-left: $off_size solid transparent;
        border-right: $off_size solid transparent;
        border-top: $size solid $color;

    } @else if $orientation == 'up' {
        border-left: $off_size solid transparent;
        border-right: $off_size solid transparent;
        border-bottom: $size solid $color;

    } @else if $orientation == 'left' {
        border-top: $off_size solid transparent;
        border-right: $size solid $color;
        border-bottom: $off_size solid transparent;

    } @else { // right
        border-top: $off_size solid transparent;
        border-left: $size solid $color;
        border-bottom: $off_size solid transparent;
    }
}
